---
server:
    port: 8238
---
grails:
    profile: web
    codegen:
        defaultPackage: com.test
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    jmx:
        unique-names: true
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    devtools:
        restart:
            additional-exclude:
                - '*.gsp'
                - '**/*.gsp'
                - '*.gson'
                - '**/*.gson'
                - 'logback.groovy'
                - '*.properties'
management:
    endpoints:
        enabled-by-default: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlet: html
                taglib: none
                staticparts: none
management:
    endpoints:
        jmx:
            unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.h2.Driver
    username: sa
    password: ''

environments:
    development:
        dataSource:
            dbCreate: create-drop
            url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: none
            url: jdbc:h2:./prodDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
---
ldapServers:
    d1:
        base: 'dc=d1,dc=example,dc=com'
        port: 10389
        indexed:
            - 'objectClass'
            - 'uid'
            - 'mail'
            - 'userPassword'
            - 'description'
---
grails:
    plugin:
        springsecurity:
            authority:
                className: 'com.test.Role'
            controllerAnnotations:
                staticRules:
                    -
                        pattern: '/'
                        access: 'permitAll'
                    -
                        pattern: '/error'
                        access: 'permitAll'
                    -
                        pattern: '/index'
                        access: 'permitAll'
                    -
                        pattern: '/index.gsp'
                        access: 'permitAll'
                    -
                        pattern: '/shutdown'
                        access: 'permitAll'
                    -
                        pattern: '/assets/**'
                        access: 'permitAll'
                    -
                        pattern: '/**/js/**'
                        access: 'permitAll'
                    -
                        pattern: '/**/css/**'
                        access: 'permitAll'
                    -
                        pattern: '/**/images/**'
                        access: 'permitAll'
                    -
                        pattern: '/**/favicon.ico'
                        access: 'permitAll'
            password:
                algorithm: 'SHA-256'
            rememberMe:
                persistent: true
                persistentToken:
                    domainClassName: 'com.test.PersistentLogin'
            userLookup:
                userDomainClassName: 'com.test.User'
                authorityJoinClassName: 'com.test.UserRole'
            ldap:
                authorities:
                    groupSearchBase: 'ou=groups,dc=d1,dc=example,dc=com'
                    groupSearchFilter: 'uniquemember={0}'
                    retrieveDatabaseRoles: true
                context:
                    managerDn: 'uid=admin,ou=system'
                    managerPassword: 'secret'
                    server: 'ldap://localhost:10389'
                rememberMe:
                    detailsManager:
                        groupRoleAttributeName: 'cn'
                        groupSearchBase: 'ou=groups,dc=d1,dc=example,dc=com'
                    usernameMapper:
                        userDnBase: 'dc=d1,dc=example,dc=com'
                        usernameAttribute: 'cn'
                search:
                    base: 'dc=d1,dc=example,dc=com'
                    filter: '(uid={0})'
                useRememberMe: true
